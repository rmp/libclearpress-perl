<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <title>ClearPress Framework</title>
  <link rel="stylesheet" type="text/css" href="clearpress.css"/>
</head>

 <body>
  <h1>ClearPress Framework</h1>
<div class="main">

<h2>Authorisation</h2>

<p>
 Authorisation is a bit of a thorny issue. On the most part
 authorisation in ClearPress is dealt with in a
 view's <i>authorised</i> method. To authorise all read and
 write actions for a view one could write:
</p>
<code>sub authorised {
  return 1;
}</code>

<p>
 Obviously this is way too simple for most applications. For many, the
 level of authorisation needed is simply based on who the user is, if
 they're logged in, or at most on which usergroup the user
 is. <i>$requestor</i> usually holds the user object of the logged in
 user, or a 'fake' public user, otherwise (faked for the simplicity of
 making calls on a user object).
</p>
<code>sub authorised {
 my $self = shift;
 my $util = $self->util;
 my $requestor = $util->requestor;

 if(!$requestor->id_user) {
  #########
  # automatically disallow anyone not logged in
  #
  return;
 }

 if($requestor->username() eq 'me@example.com') {
  #########
  # Allow me@example.com access to everything
  #
  return 1;
 }

 if($requestor->is_member_of('admin', 'superusers')) {

  #########
  # Allow all members of 'admin' and 'superusers' usergroups access to
  # everything
  #

  return 1;
 }

 my $action = $self->action;
 if($action eq 'read') {
  #########
  # Allow all logged in members read access to this view.
  # REST actions = list, read, edit, add)
  #
  return 1;
 }

 #########
 # Disallow all other access
 #
 return;
}</code>

<p>
 As the <i>authorised</i> method is invoked for every view it's
 possible to implement default access restrictions in an
 <i>app::view</i> superclass and then override the method in a derived
 class and call up to SUPER::authorised where necessary.
</p>
<fieldset>
 <legend>app::view</legend>
 <code>sub authorised {
  my $self = shift;
  my $util = $self->util;
  my $requestor = $util->requestor;

  if($requestor->is_member_of('admin')) {
   return 1;
  }
  return;
 }</code>
</fieldset>

<fieldset>
 <legend>app::view::subclass</legend>
 <code>sub authorised {
  my $self = shift;
  my $util = $self->util;
  my $requestor = $util->requestor;

  if($requestor->is_member_of('subclass admin')) {
   return 1;
  }

  return $self->SUPER::authorised();
 }</code>
</fieldset>

<p>
 From here, authorisation can become much more complex. For example if
 a user is only authorised for a component in a complex page, the
 authorisation for that component needs to be placed in the template
 for the page like so:
</p>

<fieldset>
 <legend>read_complex.tt2</legend>
 <code>
&lt;h2&gt;Page Title&lt;/h2&gt;
&lt;p&gt;page content&lt;/p&gt;
[%- IF requestor.is_member_of('admin') %]
 &lt;p&gt;some admin content&lt;/p&gt;
[%- END %]
 </code>
</fieldset>

</div><!--end main-->

<div id="menu">
 <ul>
  <li><a href="/index.shtml">About</a></li>
  <li><a href="/installing.shtml">Installing</a></li>
  <li><a href="/basics.shtml">The Basics</a></li>
  <li><a href="/rest.shtml">REST</a></li>
  <li><a href="/orm.shtml">ORM / Models</a></li>
  <li><a href="/views.shtml">Views</a></li>
  <li><a href="/routes.shtml">Routes</a></li>
  <li><a href="/streaming.shtml">Streamed content</a></li>
  <li><a href="/mimetypes.shtml">Custom response types</a></li>
  <li><a href="/paging.shtml">Paging Lists</a></li>
  <li><a href="/ajax.shtml">Working with AJAX</a></li>
  <li><a href="/authen.shtml">Authentication</a></li>
  <li><a href="/authz.shtml">Authorisation</a></li>
  <li><a href="/pdf.shtml">Exporting PDFs</a></li>
 </ul>

 <br/><br/><b>Still to come:</b>
 <ul style="font-style:italic">
  <li>Transactions</li>
  <li>Posting XML</li>
  <li>Automated Testing</li>
  <li>Internationalisation</li>
 </ul>
</div>


<div class="footer" style="margin-left:-50px">
<SCRIPT charset="utf-8" type="text/javascript" src="http://ws.amazon.co.uk/widgets/q?ServiceVersion=20070822&MarketPlace=GB&ID=V20070822/GB/gardmalt-21/8001/e9b44bbc-a251-45f1-8386-10affeb751cc"> </SCRIPT> <NOSCRIPT><A HREF="http://ws.amazon.co.uk/widgets/q?ServiceVersion=20070822&MarketPlace=GB&ID=V20070822%2FGB%2Fgardmalt-21%2F8001%2Fe9b44bbc-a251-45f1-8386-10affeb751cc&Operation=NoScript">Amazon.co.uk Widgets</A></NOSCRIPT>
</div>

<div class="footer">
<address><a href="mailto:rmp@psyphi.net">rmp</a></address>
<!-- Created: Mon Jan 19 11:45:21 GMT 2009 -->
<!-- hhmts start -->
Last modified: Tue Jan 26 12:12:00 2010
<!-- hhmts end -->
</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-815452-5");
pageTracker._trackPageview();
} catch(err) {}</script>
  </body>
</html>

